{
  "id": "intelliSAFTEY/atmospheric-monitoring-log",
  "title": "Atmospheric Monitoring Log",
  "description": "Log atmospheric readings over time; AI can build initial plan and hazards.",
  "gadgets": [
    {
      "id": "atmospheric-monitoring-log-gadget",
      "type": "ai-analysis-wizard-gadget",
      "title": "Atmospheric Monitoring Log",
      "description": "Voice/text notes, optional image analysis, tabular readings, and PDF.",
      "config": {
        "sections": [
          {
            "id": "voice_capture",
            "title": "Voice Capture",
            "sectionType": "voice",
            "includeInPdf": false
          },
          {
            "id": "image_capture",
            "title": "Image Capture",
            "sectionType": "image",
            "includeInPdf": false
          },
          {
            "id": "image_analysis",
            "title": "Scene Analysis",
            "imageAnalysisPromptRef": "deepImageAnalysis",
            "promptSourceIds": [
              "image_capture"
            ],
            "includeInPdf": true,
            "pdf": {
              "includeOverview": true,
              "includeImages": false
            }
          },
          {
            "id": "monitoring_plan",
            "title": "Monitoring Plan",
            "includeInPdf": true,
            "grid": {
              "title": "Plan Items",
              "dataKey": "planItems",
              "columns": [
                {
                  "key": "location",
                  "title": "Location",
                  "editable": true
                },
                {
                  "key": "interval",
                  "title": "Interval (min)",
                  "editable": true
                },
                {
                  "key": "notes",
                  "title": "Notes",
                  "editable": true
                }
              ],
              "promptRef": "planPopulate",
              "btnLabel": "Populate from AI"
            }
          },
          {
            "id": "readings",
            "title": "Atmospheric Readings",
            "includeInPdf": true,
            "grid": {
              "title": "Readings",
              "dataKey": "readings",
              "columns": [
                {
                  "key": "timestamp",
                  "title": "Timestamp",
                  "editable": true
                },
                {
                  "key": "o2",
                  "title": "%O2",
                  "editable": true
                },
                {
                  "key": "lel",
                  "title": "%LEL",
                  "editable": true
                },
                {
                  "key": "h2s",
                  "title": "H2S (ppm)",
                  "editable": true
                },
                {
                  "key": "co",
                  "title": "CO (ppm)",
                  "editable": true
                },
                {
                  "key": "notes",
                  "title": "Notes",
                  "editable": true
                }
              ]
            }
          },
          {
            "id": "attachments_signoff",
            "title": "Sign-Off",
            "includeInPdf": true
          }
        ],
        "groups": [
          {
            "id": "signoff_group",
            "title": "Signoff",
            "sectionId": "attachments_signoff",
            "lgSpan": 24
          }
        ],
        "fields": [
          {
            "id": "supervisor_name",
            "label": "Supervisor Name",
            "type": "text",
            "required": true,
            "groupId": "signoff_group",
            "lgSpan": 12
          },
          {
            "id": "signoff_date",
            "label": "Date",
            "type": "date",
            "required": true,
            "groupId": "signoff_group",
            "lgSpan": 12
          }
        ],
        "pdfStyling": {
          "header": {
            "backgroundColor": [
              24,
              24,
              27
            ],
            "textColor": [
              255,
              255,
              255
            ],
            "fontSize": 12,
            "companyName": "PK Safety"
          },
          "footer": {
            "textColor": [
              100,
              116,
              139
            ],
            "fontSize": 6,
            "leftText": "Atmospheric Log",
            "centerText": "Confidential",
            "rightText": "Page {page} of {pages}"
          },
          "sections": {
            "headerFontSize": 10,
            "contentFontSize": 8,
            "lineSpacing": 3.5,
            "margins": {
              "left": 15,
              "right": 195
            }
          },
          "tables": {
            "headerBackground": [
              2,
              6,
              23
            ],
            "headerTextColor": [
              255,
              255,
              255
            ],
            "headerFontSize": 8,
            "contentFontSize": 7,
            "cellPadding": 3
          }
        },
        "prompts": {
          "deepImageAnalysis": {
            "modelConfig": {
              "model": "gpt-5-nano",
              "max_completion_tokens": 1000
            },
            "promptConfig": {
              "systemPrompt": "Analyze images for hazards affecting monitoring. Output JSON only.",
              "userPrompt": "JSON only"
            }
          },
          "planPopulate": {
            "modelConfig": {
              "model": "gpt-5-nano",
              "max_completion_tokens": 800,
              "temperature": 0.3
            },
            "promptConfig": {
              "systemPrompt": "ROLE: Draft a monitoring plan (locations, interval, notes) from transcript and overview. FORMAT: JSON array rows.",
              "userPrompt": "Transcript:\n{{transcript}}\n\nImage Overview:\n{{image_overview}}\n\nReturn array: [ { \"location\": \"string\", \"interval\": \"string|number\", \"notes\": \"string\" } ]"
            }
          }
        },
        "recordDataPopulation": {
          "enabled": true,
          "populateOnLoad": true,
          "disablePopulatedFields": true,
          "urlParams": [
            {
              "name": "recordId",
              "queryParam": "record_id",
              "required": true
            }
          ],
          "request": {
            "url": "/api/documents",
            "method": "GET",
            "query": {
              "type": "asset",
              "id": "{params.recordId}"
            }
          },
          "responseSelector": "data.0"
        },
        "domainConfig": {
          "payloadType": "safety",
          "defaultType": "atmospheric_monitoring_log",
          "fields": {
            "type": "wizard_type",
            "documentType": "document_type",
            "label": "label",
            "id": "record_id",
            "name": "record_name",
            "owner": "owner",
            "date": "created_at"
          },
          "outputKeys": {
            "type": "wizardType",
            "documentType": "documentType",
            "label": "label",
            "id": "recordId",
            "name": "recordName",
            "owner": "owner",
            "date": "createdAt"
          },
          "payloadKeys": {
            "type": "wizardType",
            "documentType": "documentType",
            "label": "label"
          },
          "navigation": {
            "listingSuffix": "responses",
            "homeSuffix": "home"
          },
          "typeMap": {
            "atmospheric_monitoring_log": "Atmospheric Monitoring Log"
          }
        },
        "type": "safety",
        "documentType": "atmospheric_monitoring_log",
        "label": "Atmospheric Monitoring Log",
        "identity": {
          "recordType": "wizard",
          "domain": "safety",
          "domainLabel": "Safety",
          "domainSubType": "atmospheric_monitoring_log",
          "domainSubTypeLabel": "Atmospheric Monitoring Log"
        },
        "persistence": {
          "create": {
            "url": "/api/documents",
            "method": "POST"
          },
          "update": {
            "url": "/api/documents/{id}",
            "method": "PUT"
          },
          "progress": {
            "url": "/api/documents/{id}",
            "method": "PATCH"
          },
          "recordIdPath": [
            "data.id",
            "data._id",
            "id",
            "_id"
          ],
          "successMessages": {
            "create": "Wizard record saved",
            "update": "Wizard record updated",
            "progress": "Wizard progress saved"
          }
        }
      },
      "position": 24
    }
  ],
  "layout": "dashboard",
  "settings": {
    "autoRefresh": false,
    "theme": "light",
    "density": "comfortable"
  }
}
